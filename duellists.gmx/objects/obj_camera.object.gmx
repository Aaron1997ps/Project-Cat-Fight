<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Defaults
following = noone
side_following = noone
camera_offset_x = 0
camera_offset_y = 0
camera_width_normal = 640; //original camera width/height
camera_height_normal = 360; 
camera_width = 640; //camera width/height trying to become
camera_height = 360;
camera_trans_w = 640; //actual camera width/height
camera_trans_h = 360;
camera_set_width = camera_width_normal
x = x - (camera_width/2)
y = y - (camera_height/2)
follow_dead_timer = 0;

move_x = x
move_y = y

camera_c_x = x;
camera_c_y = y

free_cam = false;
currently_spectating = noone;


spec_alpha = 0;

//Effects for time of day
NightEnable = true;
DayEnable = true;

show_hudname = true;

//Limits on screen
llimit = true
rlimit = true
ulimit = true
dlimit = true

//If player can zoom with camera
camconstrain = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop on edge of room
if llimit and x &lt; 0 x = 0;
if ulimit and y &lt; 0 y = 0;
if rlimit and x &gt;= room_width-camera_trans_w {x = room_width-camera_trans_w}
if dlimit and y &gt;= room_height-camera_trans_h {y = room_height-camera_trans_h}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set the view

view_hview = camera_trans_h
view_wview = camera_trans_w
view_xview = x
view_yview = y

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Messages
//gms_show_set_position(0, 0,500, 400 )

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Limit free_cam height/width
if (free_cam)
{
if move_x &gt; room_width-camera_trans_w*0.5 
   move_x = room_width-camera_trans_w*0.5 
if move_x &lt; camera_trans_w*0.5 
   move_x = camera_trans_w*0.5 
if move_y &gt; room_height-camera_trans_h*0.5 
   move_y = room_height-camera_trans_h*0.5 
if move_y &lt; camera_trans_h*0.5 
   move_y = camera_trans_h*0.5  
   
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cam zoom
camera_c_x = x + (camera_trans_w*0.5)
camera_c_y = y + (camera_trans_h*0.5)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///camera zoom
temp = abs(camera_trans_w - camera_width);
wToH = (camera_height_normal/camera_width_normal)
if camera_trans_w &gt; camera_width{ camera_trans_w -= temp/10 x+=temp/20 y+=temp*wToH/20}
if camera_trans_w &lt; camera_width{ camera_trans_w += temp/10 x-=temp/20 y-=temp*wToH/20}
if temp &lt; 0.5 camera_trans_w = camera_width

camera_trans_h = camera_trans_w*wToH

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Following
if instance_exists(side_following) and !free_cam{
move_x = side_following.x+16 + (50 * side_following.hspeed) + camera_offset_x
move_y = side_following.y + (50 * side_following.vspeed) + camera_offset_y
}
else if instance_exists(following) and !free_cam{
move_x = following.x+16 + (50 * following.hspeed) + camera_offset_x
move_y = following.y + (50 * following.vspeed) + camera_offset_y
}
else
{  
   if (!free_cam and currently_spectating = noone)
   {
      //currently_spectating = find_next_player(noone);
      //following = get_obj(currently_spectating);
   }   
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if point_distance(x+(camera_trans_w/2),y+(camera_trans_h/2),move_x,move_y) &gt; 1 {
  var i = point_distance(x+(camera_trans_w/2),y+(camera_trans_h/2),move_x,move_y)/80
  if (instance_exists(side_following))
    speed = i+(side_following.speed *0.2);
  else if (instance_exists(following))
    speed = i+(following.speed *0.2);
  else
    speed = i;
}
else
{
  speed = 0;
}
direction = point_direction(x+(camera_trans_w/2),y+(camera_trans_h/2),move_x,move_y);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Key Presses

/*
if (keyboard_check_pressed(global.co_cam1))
{
  camera_width = camera_width_normal
  camera_set_width = camera_width
}
if (keyboard_check_pressed(global.co_cam2))
{
  camera_width = 800
  camera_set_width = camera_width
} 
if (keyboard_check_pressed(global.co_cam3))
{
  camera_width = 500
  camera_set_width = camera_width
}*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///free_cam
if (free_cam){
    if (global.key_right){
      move_x += 6
    }
    else if (global.key_left){
      move_x -= 6
    }
    if (global.key_up){
      move_y -= 6
    }
    else if (global.key_down){
      move_y += 6
    }
}
//if (global.key_jump){
//    free_cam = false;
    //currently_spectating = find_next_player(currently_spectating);
//    following = get_obj(currently_spectating);
//}
if (false){
    free_cam = !free_cam
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cam zoom
camera_c_x = x + (camera_trans_w*0.5)
camera_c_y = y + (camera_trans_h*0.5)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Global Cam C

global.CamCX = view_xview[0]+(0.5*view_wview[0])
global.CamCY = view_yview[0]+(0.5*view_hview[0])
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cam zoom
camera_c_x = x + (camera_trans_w*0.5)
camera_c_y = y + (camera_trans_h*0.5)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gms_instance_handover_all()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEBUG

if (false)
{
  draw_set_color(c_black)
  draw_set_font(font_options);
  draw_set_valign(fa_top);
  draw_set_halign(fa_left)
  draw_text(10,110,"Following: " + object_get_name(following));
  draw_text(10,140,"Side Following: " + object_get_name(side_following));
  draw_text(10,170,"Free Cam: " + string(free_cam));
//  draw_text(10,200,"Currently Spectating: "+string(currently_spectating));
//  draw_text(10,230,"Spectating Obj: "+string(get_obj(currently_spectating)));
//  draw_text(10,260,"Spectating Obj Name: "+string(object_get_name(get_obj(currently_spectating))));
  draw_text(10,290,"Session Type: "+ string(gms_session_type(gms_session_current_id())));
  draw_text(10,320,"Session ID: "+ string(gms_session_current_id()));
  draw_text(10,350,"Session Count: "+ string(gms_session_count()));
  draw_text(10,380,"Master Player: "+ string(gms_master_player()));  
  draw_text(10,410,"move_x: "+ string(move_x));
  draw_text(10,440,"move_y: "+ string(move_y));  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
